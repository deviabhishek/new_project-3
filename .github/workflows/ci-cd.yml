name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPO: ci-cd-repository
      DOCKERHUB_REPO: devopsship/ci-cd-project

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Required Software
        run: |
          sudo apt update -y
          sudo apt install -y wget unzip nodejs npm

          # Install AWS CLI (Check if installed first)
          if ! aws --version &> /dev/null; then
              echo "Installing AWS CLI..."
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install --update
          else
              echo "AWS CLI is already installed."
          fi
          aws --version

          # Install Trivy
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt update -y && sudo apt install -y trivy

          # Verify Installations
          aws --version
          node -v
          npm -v
          trivy --version

      - name: Run NPM Build
        run: |
          npm install
          npm run build

      - name: Run Trivy Security Scan
        run: |
          trivy fs --severity HIGH,CRITICAL .

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.DOCKERHUB_REPO }}:latest .

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "devopsship" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ env.DOCKERHUB_REPO }}:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin <aws_account_id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Push Docker Image to AWS ECR
        run: |
          docker tag ${{ env.DOCKERHUB_REPO }}:latest <aws_account_id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:latest
          docker push <aws_account_id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:latest

      - name: Cleanup Unused Files & Docker Resources
        run: |
          echo "Cleaning up temporary files..."
          rm -rf awscliv2.zip

          echo "Removing unused Docker images..."
          docker system prune -af

          echo "Cleaning up unused packages..."
          sudo apt autoremove -y && sudo apt clean
